[project]
name = "{{ cookiecutter.package_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = [{ name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" }]
license = "{{ cookiecutter.license }}"
readme = "README.md"


classifiers = [
    "Development Status :: {{ cookiecutter.development_status }}",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    # PYTHON_VERSION_CLASSIFIERS_PLACEHOLDER
]
requires-python = ">= {{ cookiecutter.python_min_version }}"
dependencies = []

[project.optional-dependencies]
dev = [
    {%- if cookiecutter.include_pre_commit == "y" %}
    "pre-commit",
    {%- endif %}
    "ipython",
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "hypothesis>=6.112.0",
]
{%- if cookiecutter.include_docs == "y" %}
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocstrings",
    "mkdocs-bibtex",
    "mkdocstrings-python",
    "mkdocs-autorefs",
    "mkdocs-git-committers-plugin-2",
    "mkdocs-git-revision-date-localized-plugin",
]
{%- endif %}

[project.urls]
"Homepage" = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.package_name }}"
"Bug Tracker" = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.package_name }}/issues"
"Documentation" = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.package_name }}"
"Source Code" = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.package_name }}"
"Release Notes" = "https://{{ cookiecutter.github_username }}.github.io/{{ cookiecutter.package_name }}/changelog/"

[tool.setuptools]
zip-safe = true
include-package-data = true

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"


[tool.setuptools.packages.find]
include = ["{{ cookiecutter.package_name }}*"]
namespaces = false


[tool.mypy]
ignore_missing_imports = true
strict = true


# Ruff configuration: https://docs.astral.sh/ruff/configuration/#configuring-ruff
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
select = [
    'F',  # Pyflakes
    'E',  # pycodestyle (Error)
    'I',  # isort
    'D',  # pydocstyle
    'UP', # pyupgrade
]
pydocstyle = { convention = "google" }

[tool.ruff.lint.per-file-ignores]
'docs/*' = ["D"]
'tests/*' = ["D"]


# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
